# MEMj ###########
# `:actionlist [フィルタ]` でIdeaVimから呼び出せる機能を参照できる。 ref: https://ikenox.info/blog/ideavim-search-actionlist/
# `:action [アクション名]` でアクションの呼び出しができる。これで試してバインドを考える。

source ~/.vimrc

set clipboard=unnamed,unnamedplus

" .ideavimrcを編集できるようにする
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

" 画面をシンプルにする。
nnoremap <M-w>z :action ToggleDistractionFreeMode<CR>

" Kinesis用の設定。CmdをCtrlにリダイレクト
nnoremap <M-r> <C-r>
nnoremap <M-v> <C-v>
nnoremap <M-u> <C-u>
nnoremap <M-d> <C-d>
nnoremap <M-r> <C-r>

nnoremap [f :<C-u>action MethodUp<CR>
nnoremap ]f :<C-u>action MethodDown<CR>

" タグジャンプを gj 起点で実行できるように変更
nnoremap K :<C-u>action QuickJavaDoc<CR>
nnoremap gjK :<C-u>action GotoDeclaration<CR>
nnoremap gjk :<C-u>action GotoTypeDeclaration<CR>
nnoremap gji :<C-u>action GotoImplementation<CR>
nnoremap gjs :<C-u>action GotoSuperMethod<CR>
nnoremap gjt :<C-u>action GotoTest<CR>
nnoremap gju :<C-u>action ShowUsages<CR>

" リファクタリング関連のキーバインド
nnoremap cre :<C-u>action RenameElement<CR>
nnoremap cS :<C-u>action ChangeSignature<CR>
nnoremap cts :<C-u>action ChangeTypeSignature<CR>

" 前回の変更場所に移動する。
nnoremap g; :<C-u>action JumpToLastChange<CR>
nnoremap g, :<C-u>action JumpToNextChange<CR>

## 便利な操作関連
" C-w は死守
nnoremap <M-w> <Nop>

" 現在のタブ以外を閉じる
nnoremap <M-w>o :<C-u>action CloseAllEditorsButActive<CR>

" IDEアクションを検索
nnoremap <Space>a :<C-u>action GotoAction<CR>

" コード生成メニューを表示
nnoremap <Space>G :<C-u>action Generate<CR>

" 新規クラスを生成
nnoremap <Space>gn :<C-u>action NewClass<CR>

" メソッドをオーバーライド
nnoremap <Space>go :<C-u>action OverrideMethods<CR>

" コンストラクタを生成
nnoremap <Space>gc :<C-u>action GenerateConstructor<CR>

" Getter を生成
nnoremap <Space>gg :<C-u>action GenerateGetter<CR>

" Setter を生成
nnoremap <Space>gs :<C-u>action GenerateSetter<CR>

" Getter/Setter を生成
nnoremap <Space>ga :<C-u>action GenerateGetterAndSetter<CR>

" equals を生成
nnoremap <Space>ge :<C-u>action GenerateEquals<CR>

" テストメソッドを生成
nnoremap <Space>gt :<C-u>action GenerateTestMethod<CR>

" 現在のバッファをフォーマット
nnoremap <Space>= :<C-u>action ReformatCode<CR>

" アウトラインを表示
nnoremap <Space>o :<C-u>action FileStructurePopup<CR>

" ファイルを検索
nnoremap <Space>f :<C-u>action GotoFile<CR>

" ファイルを全文検索
nnoremap <C-S-f> :<C-u>action FindInPath<CR>

" クラスを検索
nnoremap <Space>s :<C-u>action GotoClass<CR>

" シンボルを検索
nnoremap <Space>S :<C-u>action GotoSymbol<CR>

" Terminalを表示
nnoremap <Space>t :<C-u>action ActivateTerminalToolWindow<CR>

" 直近開いたプロジェクトを表示する
nnoremap <Space>P :<C-u>action ManageRecentProjects<CR>

" ブレークポイントをトグルする。
nnoremap <Space>b :<C-u>action ToggleLineBreakpoint<CR>

" 実行
nnoremap <Space>rr :<C-u>action Run<CR>

" クラスを実行
nnoremap <Space>rm :<C-u>action RunClass<CR>

" デバッグ実行
nnoremap <Space>d :<C-u>action Debug<CR>

" 実行を停止
nnoremap <Space>T :<C-u>action Stop<CR>

" なぜか動かないのでコメントアウト
" Back
" nnoremap <M--> :<C-u>action Back<CR>
" Forward
" nnoremap <M-s--> :<C-u>action Forward<CR>

## ウィンドウ操作関連
" 現在のバッファを閉じる
nnoremap <Space>q :<C-u>action CloseContent<CR>
" 最後の閉じたバッファを開く
nnoremap <Space>Q :<C-u>action ReopenClosedTab<CR>
nnoremap <M-w>\ :action SplitVertically<CR>
nnoremap <M-w>- :action SplitHorizontally<CR>
nnoremap <M-w>' :action Unsplit<CR>
nnoremap <M-w>m :action MoveEditorToOppositeTabGroup<CR>
sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <M-w>h <c-w>h
nnoremap <M-w>l <c-w>l
nnoremap <M-w>j <c-w>j
nnoremap <M-w>k <c-w>k
nnoremap <TAB> :action NextTab<CR>
nnoremap <s-TAB> :action PreviousTab<CR>
nnoremap <Space>en :action EditSourceInNewWindow<CR>
nnoremap <Space>n :action NextWindow<CR>
nnoremap <Space>q :action CloseContent<CR>
nnoremap <Space>qa :action CloseAllEditors<CR>

" 文字をZoomIn, ZoomOut
nnoremap <C-S-=> :action EditorIncreaseFontSize<CR>
nnoremap <C-S--> :action EditorDecreaseFontSize<CR>
nnoremap <C-S-\> :action EditorResetFontSize<CR>

### Plug: NERDTree
## Usage
# j/k ... Go up and down
# q ... Close the project pane
# p ... Jump to the root pane
# o ... Open file or directory
# go ... Open file but fucus on the project pane
# s ... Open file but in a new vertical split.
set NERDTree
nnoremap <M-t> :NERDTree<CR>

### Plug: Surround
## Usage
# cs ... To change th surroundings
# ds ... To delete the surroundings
# ys ... To add surroundings
# s ... To surround the currently selected text.
## Example
# cs"' ... Change the surrounding from double quotes to single quotes.
# ds" ... Delete the closest double-quotes surroundings.
# ysiw<b> ... Surround the current word with <b> tag.
set surround
